How did viewing a diff between two versions of a file help you see the bug that
was introduced?

    * The program only listed changed lines
    * I was able to see changed lines next to each other

How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?

    When my program does not work as expected. 
    I can quickly revert to the previous version of the file.

What do you think are the pros and cons of manually choosing when to create a
commit, like you do in Git, vs having versions automatically saved, like Google
docs does?

    The con is that it relies on the programmer to do the commit, they can forget
    The pros is that the commmit is meamingfull and is mor usefull when distinguishing
    between versions.

Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file separately?

    In many cases a change may affects more than 1 file so it makes sense to update all 
    the affected files at the samle time.

How can you use the commands git log and git diff to view the history of files?

    First you use git log to find the git commit ids and the use git diff to compare the changes between commits

How might using version control make you more confident to make changes that
could break something?

    You know that you cna always reverse changes if something does not work as expected

Now that you have your workspace set up, what do you want to try using Git for?

    Just do something
bla